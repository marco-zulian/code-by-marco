/*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */
@layer properties;
@font-face {
  font-family: "Roboto";
  src: url("../assets/fonts/Roboto-Regular.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: "Roboto";
  src: url("../assets/fonts/Roboto-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
}
@layer theme, base, components, utilities;
@layer theme {
  :root,
  :host {
    --font-sans:
      ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono:
      ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-blue-800: #242742;
    --color-white: #ffffff;
    --spacing: 0.25rem;
    --text-base: 1rem;
    --font-weight-bold: 700;
    --leading-normal: 1.5;
    --radius-sm: 0.5rem;
    --radius-md: 1rem;
    --radius-lg: 2.25rem;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-roboto: "Roboto", sans-serif;
    --color-grey: #949494;
    --color-red: #ff6155;
  }
}
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html,
  :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      "Noto Color Emoji"
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      "Liberation Mono",
      "Courier New",
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(
      --default-mono-font-variation-settings,
      normal
    );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    display: block;
    vertical-align: middle;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea,
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button)) or
    (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit,
  ::-webkit-datetime-edit-year-field,
  ::-webkit-datetime-edit-month-field,
  ::-webkit-datetime-edit-day-field,
  ::-webkit-datetime-edit-hour-field,
  ::-webkit-datetime-edit-minute-field,
  ::-webkit-datetime-edit-second-field,
  ::-webkit-datetime-edit-millisecond-field,
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type="button"], [type="reset"], [type="submit"]),
  ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button,
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-auto {
    margin-top: auto;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .h-full {
    height: 100%;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-full {
    width: 100%;
  }
  .min-w-screen {
    min-width: 100vw;
  }
  .grow-1 {
    flex-grow: 1;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,)
      var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .grid-cols-\[auto_1fr\] {
    grid-template-columns: auto 1fr;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .self-end {
    align-self: flex-end;
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-b-md {
    border-bottom-right-radius: var(--radius-md);
    border-bottom-left-radius: var(--radius-md);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-blue-800 {
    border-color: var(--color-blue-800);
  }
  .bg-blue-800 {
    background-color: var(--color-blue-800);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .from-\[\#FF6A3A\] {
    --tw-gradient-from: #ff6a3a;
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-\[\#FF527B\] {
    --tw-gradient-to: #ff527b;
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .object-cover {
    object-fit: cover;
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .pt-45 {
    padding-top: calc(var(--spacing) * 45);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-11 {
    padding-bottom: calc(var(--spacing) * 11);
  }
  .pb-17\.5 {
    padding-bottom: calc(var(--spacing) * 17.5);
  }
  .font-roboto {
    font-family: var(--font-roboto);
  }
  .text-\[13px\]\/\[150\%\] {
    font-size: 13px;
    line-height: 150%;
  }
  .text-base\/normal {
    font-size: var(--text-base);
    line-height: var(--leading-normal);
  }
  .text-\[3\.5rem\] {
    font-size: 3.5rem;
  }
  .text-\[clamp\(2\.5rem\,9\.5vw\,3\.5rem\)\] {
    font-size: clamp(2.5rem, 9.5vw, 3.5rem);
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-blue-800 {
    color: var(--color-blue-800);
  }
  .text-red {
    color: var(--color-red);
  }
  .text-white {
    color: var(--color-white);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .before\:content-\[url\(\'\.\.\/assets\/images\/icon-list\.svg\'\)\] {
    &::before {
      content: var(--tw-content);
      --tw-content: url("../assets/images/icon-list.svg");
      content: var(--tw-content);
    }
  }
  .placeholder-shown\:border-grey {
    &:placeholder-shown {
      border-color: var(--color-grey);
    }
  }
  .not-placeholder-shown\:user-invalid\:border-red {
    &:not(*:placeholder-shown) {
      &:user-invalid {
        border-color: var(--color-red);
      }
    }
  }
  .not-placeholder-shown\:user-invalid\:bg-red\/20 {
    &:not(*:placeholder-shown) {
      &:user-invalid {
        background-color: color-mix(in srgb, #ff6155 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(
            in oklab,
            var(--color-red) 20%,
            transparent
          );
        }
      }
    }
  }
  .not-placeholder-shown\:user-invalid\:text-red {
    &:not(*:placeholder-shown) {
      &:user-invalid {
        color: var(--color-red);
      }
    }
  }
  .hover\:bg-linear-to-r {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-position: to right;
        @supports (background-image: linear-gradient(in lab, red, red)) {
          --tw-gradient-position: to right in oklab;
        }
        background-image: linear-gradient(var(--tw-gradient-stops));
      }
    }
  }
  .hover\:shadow-\[0_16px_32px_rgba\(255\,97\,85\,0\.5\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 16px 32px var(--tw-shadow-color, rgba(255, 97, 85, 0.5));
        box-shadow:
          var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
          var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .md\:h-auto {
    @media (width >= 38rem) {
      height: auto;
    }
  }
  .md\:min-h-auto {
    @media (width >= 38rem) {
      min-height: auto;
    }
  }
  .md\:w-auto {
    @media (width >= 38rem) {
      width: auto;
    }
  }
  .md\:max-w-\[504px\] {
    @media (width >= 38rem) {
      max-width: 504px;
    }
  }
  .md\:max-w-\[608px\] {
    @media (width >= 38rem) {
      max-width: 608px;
    }
  }
  .md\:min-w-auto {
    @media (width >= 38rem) {
      min-width: auto;
    }
  }
  .md\:grow-0 {
    @media (width >= 38rem) {
      flex-grow: 0;
    }
  }
  .md\:gap-6 {
    @media (width >= 38rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .md\:rounded-lg {
    @media (width >= 38rem) {
      border-radius: var(--radius-lg);
    }
  }
  .md\:rounded-md {
    @media (width >= 38rem) {
      border-radius: var(--radius-md);
    }
  }
  .md\:p-0 {
    @media (width >= 38rem) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .md\:p-10 {
    @media (width >= 38rem) {
      padding: calc(var(--spacing) * 10);
    }
  }
  .md\:p-16 {
    @media (width >= 38rem) {
      padding: calc(var(--spacing) * 16);
    }
  }
  .lg\:max-w-\[400px\] {
    @media (width >= 90rem) {
      max-width: 400px;
    }
  }
  .lg\:max-w-\[904px\] {
    @media (width >= 90rem) {
      max-width: 904px;
    }
  }
  .lg\:flex-row-reverse {
    @media (width >= 90rem) {
      flex-direction: row-reverse;
    }
  }
  .lg\:justify-center {
    @media (width >= 90rem) {
      justify-content: center;
    }
  }
  .lg\:gap-16 {
    @media (width >= 90rem) {
      gap: calc(var(--spacing) * 16);
    }
  }
  .lg\:px-8 {
    @media (width >= 90rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\:py-6 {
    @media (width >= 90rem) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .\[\.submitted\]\:user-invalid\:border-red {
    &:is(.submitted) {
      &:user-invalid {
        border-color: var(--color-red);
      }
    }
  }
  .\[\.submitted\]\:user-invalid\:bg-red\/20 {
    &:is(.submitted) {
      &:user-invalid {
        background-color: color-mix(in srgb, #ff6155 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(
            in oklab,
            var(--color-red) 20%,
            transparent
          );
        }
      }
    }
  }
  .\[\.submitted\]\:user-invalid\:text-red {
    &:is(.submitted) {
      &:user-invalid {
        color: var(--color-red);
      }
    }
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or
    ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *,
    ::before,
    ::after,
    ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-content: "";
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
